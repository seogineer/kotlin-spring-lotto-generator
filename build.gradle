plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.6.0'
    id 'org.jetbrains.kotlin.plugin.spring' version '1.6.0'
    id 'org.jetbrains.kotlin.plugin.jpa' version '1.6.0'
    id 'org.jetbrains.kotlin.plugin.noarg' version '1.6.0'
    id 'org.springframework.boot' version '2.7.18'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
    // queryDSL
    id 'org.jetbrains.kotlin.kapt' version '1.6.21'
    id 'idea'
}

group = 'com.seogineer'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.json:json:20231013'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
    implementation 'org.jetbrains.kotlin:kotlin-reflect'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-restassured'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // poi
    implementation group: 'org.apache.poi', name: 'poi', version: '5.0.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '5.0.0'
    // queryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    kapt 'com.querydsl:querydsl-apt:5.0.0:jpa'
    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
}

// queryDSL
idea {
    module {
        def kaptMain = file('build/generated/source/kapt/main')
        sourceDirs += kaptMain
        generatedSourceDirs += kaptMain
    }
}

allOpen {
    annotation 'javax.persistence.Entity'
    annotation 'javax.persistence.MappedSuperclass'
    annotation 'javax.persistence.Embeddable'
}

noArg {
    annotation 'javax.persistence.Entity'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    archiveFileName = "${rootProject.name}.jar"
    // restdocs
    dependsOn asciidoctor
    delete file('src/main/resources/static/docs/*')
    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
